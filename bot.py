import os
from dotenv import load_dotenv
import telebot
from telebot import types
import sqlite3

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —ñ–∑ .env —Ñ–∞–π–ª—É
load_dotenv()

# –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("BOT_TOKEN environment variable not set")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î, –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º telegram_id
def create_users_table():
    try:
        conn = sqlite3.connect('chatbot.db')
        c = conn.cursor()
        c.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            telegram_id INTEGER UNIQUE,
            name TEXT,
            user_pass TEXT)
        ''')
        conn.commit()
    except sqlite3.Error as e:
        print(f"SQLite error on create_users_table: {e}")
    finally:
        conn.close()

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ, –ø–æ telegram_id
def add_user_if_not_exist(telegram_id, full_name):
    try:
        conn = sqlite3.connect("chatbot.db")
        c = conn.cursor()
        c.execute("SELECT telegram_id FROM users WHERE telegram_id = ?", (telegram_id,))
        user = c.fetchone()
        if not user:
            c.execute("INSERT INTO users (telegram_id, name, user_pass) VALUES (?, ?, ?)", (telegram_id, full_name, "default"))
            conn.commit()
    except sqlite3.Error as e:
        print(f"SQLite error on add_user_if_not_exist: {e}")
    finally:
        conn.close()

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø—ñ–¥–±–æ—Ä—É —Ä–æ–∑–º—ñ—Ä—É
user_data = {}
user_gender = {}

# –ö–æ–º–∞–Ω–¥–∞ /start + –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É
@bot.message_handler(commands=['start'])
def start(message):
    first = message.from_user.first_name or ''
    last = message.from_user.last_name or ''
    full_name = f"{first} {last}".strip()
    telegram_id = message.from_user.id

    add_user_if_not_exist(telegram_id, full_name)

    bot.send_message(
        message.chat.id,
        f"–ü—Ä–∏–≤—ñ—Ç! {full_name}!\n"
        "–Ø ‚Äî —Ç–≤—ñ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∑ –æ–¥—è–≥—É —Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏.\n"
        "–î–æ–ø–æ–º–æ–∂—É –≤–∏–±—Ä–∞—Ç–∏ –∫—Ä—É—Ç—ñ —Ä–µ—á—ñ, –∑–Ω–∞–π—Ç–∏ —Å–≤—ñ–π —Ä–æ–∑–º—ñ—Ä —ñ —à–≤–∏–¥–∫–æ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É.\n"
        "–Ø–∫—â–æ –º–∞—î—à –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –ø–∏—à–∏ /feedback, –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á! üòä\n"
        "–¢–∞–∫–æ–∂ –º–æ–∂–µ—à –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è, —â–æ —è –º–æ–∂—É –∑—Ä–æ–±–∏—Ç–∏ –¥–ª—è —Ç–µ–±–µ /help"
    )

# –ö–æ–º–∞–Ω–¥–∞ /help - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = (
        "<b>–û—Å—å —â–æ —è –º–æ–∂—É –∑—Ä–æ–±–∏—Ç–∏ –¥–ª—è —Ç–µ–±–µ:</b>\n"
        "‚úµ‚úµ‚úµ\n"
        "/catalog ‚Äî –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞—à—ñ —Ç–æ–≤–∞—Ä–∏\n"
        "/sizes ‚Äî –î–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∏–±—Ä–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä\n"
        "/delivery ‚Äî –†–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É —ñ –æ–ø–ª–∞—Ç—É\n"
        "/faq ‚Äî –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –ø–æ—à–∏—Ä–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è\n"
        "/order ‚Äî –î–æ–ø–æ–º–æ–≥—Ç–∏ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
        "/contacts ‚Äî –ù–∞–¥–∞—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –º–∞–≥–∞–∑–∏–Ω—É\n"
        "/feedback ‚Äî –ü—Ä–∏–π–Ω—è—Ç–∏ –≤—ñ–¥–≥—É–∫ –∞–±–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è\n"
        "‚úµ‚úµ‚úµ\n"
    )
    bot.send_message(message.chat.id, help_text, parse_mode='HTML')

# –ö–æ–º–∞–Ω–¥–∞ /catalog - –ü–æ–∫–∞–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤
@bot.message_handler(commands=['catalog'])
def catalog(message):
    markup = types.InlineKeyboardMarkup(row_width=2)

    # –ö–Ω–æ–ø–∫–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
    btn1 = types.InlineKeyboardButton('–§—É—Ç–±–æ–ª–∫–∏', callback_data='category_tshirts')
    btn2 = types.InlineKeyboardButton('–ö—É—Ä—Ç–∫–∏', callback_data='category_jackets')
    btn3 = types.InlineKeyboardButton('–í–∑—É—Ç—Ç—è', callback_data='category_shoes')
    btn4 = types.InlineKeyboardButton('–ê–∫—Å–µ—Å—É–∞—Ä–∏', callback_data='category_accessories')

    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ç–æ–≤–∞—Ä—ñ–≤:', reply_markup=markup)

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
@bot.callback_query_handler(func=lambda call: call.data.startswith('category_'))
def callback_inline(call):
    category = call.data[len('category_'):]
    if category == 'tshirts':
        text = "–ù–∞—à—ñ —Ñ—É—Ç–±–æ–ª–∫–∏:\n1. –ë—ñ–ª–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ ‚Äî 500 –≥—Ä–Ω\n2. –ß–æ—Ä–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ ‚Äî 500 –≥—Ä–Ω"
    elif category == 'jackets':
        text = "–ù–∞—à—ñ –∫—É—Ä—Ç–∫–∏:\n1. –î–æ—â–æ–≤–∏–∫ ‚Äî 1000 –≥—Ä–Ω\n2. –ó–∏–º–æ–≤–∞ –∫—É—Ä—Ç–∫–∞ ‚Äî 2050 –≥—Ä–Ω"
    elif category == 'shoes':
        text = "–ù–∞—à–µ –≤–∑—É—Ç—Ç—è:\n1. –ö—Ä–æ—Å—ñ–≤–∫–∏ ‚Äî 1299 –≥—Ä–Ω\n2. –ß–æ–±–æ—Ç–∏ ‚Äî 1599 –≥—Ä–Ω"
    elif category == 'accessories':
        text = "–ù–∞—à—ñ –∞–∫—Å–µ—Å—É–∞—Ä–∏:\n1. –†–µ–º—ñ–Ω—å ‚Äî 200 –≥—Ä–Ω\n2. –®–∞–ø–∫–∞ ‚Äî 240 –≥—Ä–Ω"
    else:
        text = "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."
    bot.send_message(call.message.chat.id, text)

# –ö–æ–º–∞–Ω–¥–∞ /sizes - –ü—ñ–¥–±—ñ—Ä —Ä–æ–∑–º—ñ—Ä—É
@bot.message_handler(commands=['sizes'])
def sizes(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ñ—ñ–Ω–∫–∞'), types.KeyboardButton('–ß–æ–ª–æ–≤—ñ–∫'))
    msg = bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—à –ø–æ–ª:', reply_markup=markup)
    bot.register_next_step_handler(msg, after_gender_choice)

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —Å—Ç–∞—Ç—ñ
def after_gender_choice(message):
    gender_text = message.text
    if gender_text not in ['–ñ—ñ–Ω–∫–∞', '–ß–æ–ª–æ–≤—ñ–∫']:
        msg = bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.')
        bot.register_next_step_handler(msg, after_gender_choice)
        return
    user_gender[message.from_user.id] = gender_text

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä'), types.KeyboardButton('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ç–∞–±–ª–∏—Ü—é —Ä–æ–∑–º—ñ—Ä—ñ–≤'))
    msg = bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', reply_markup=markup)
    bot.register_next_step_handler(msg, after_size_option)

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –¥—ñ—ó –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É —Å—Ç–∞—Ç—ñ
def after_size_option(message):
    text = message.text
    if text == '–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –∑—Ä—ñ—Å—Ç —É —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 168):")
        bot.register_next_step_handler(msg, ask_weight)
    elif text == '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ç–∞–±–ª–∏—Ü—é —Ä–æ–∑–º—ñ—Ä—ñ–≤':
        user_id = message.from_user.id
        gender_text = user_gender.get(user_id)
        if not gender_text:
            bot.send_message(message.chat.id, "–°–ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à –ø–æ–ª –∫–æ–º–∞–Ω–¥–æ—é /sizes")
            return

        if gender_text == '–ñ—ñ–Ω–∫–∞':
            photo_path = 'images/size_women.jpg'
        else:
            photo_path = 'images/size_men.jpg'

        if os.path.exists(photo_path):
            with open(photo_path, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption="–û—Å—å —Ç–∞–±–ª–∏—Ü—è —Ä–æ–∑–º—ñ—Ä—ñ–≤")
        else:
            bot.send_message(message.chat.id, "–í–∏–±–∞—á—Ç–µ, —Ç–∞–±–ª–∏—Ü—è –Ω–∞—Ä–∞–∑—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
    else:
        msg = bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –¥—ñ—é, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.')
        bot.register_next_step_handler(msg, after_size_option)

# –ó–∞–ø–∏—Ç –≤–∞–≥–∏ –ø—ñ—Å–ª—è –∑—Ä–æ—Å—Ç—É
def ask_weight(message):
    chat_id = message.chat.id
    try:
        height = int(message.text)
        if not (50 <= height <= 250):
            raise ValueError()
        if chat_id not in user_data:
            user_data[chat_id] = {}
        user_data[chat_id]['height'] = height
    except ValueError:
        msg = bot.send_message(chat_id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ä—ñ—Å—Ç —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 168) —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(msg, ask_weight)
        return
    msg = bot.send_message(chat_id, "–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 60):")
    bot.register_next_step_handler(msg, calculate_size)

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–æ–∑–º—ñ—Ä—É –ø–æ –Ü–ú–¢
def calculate_size(message):
    chat_id = message.chat.id
    try:
        weight = int(message.text)
        if not (20 <= weight <= 300):
            raise ValueError()
        if chat_id not in user_data:
            user_data[chat_id] = {}
        user_data[chat_id]['weight'] = weight
    except ValueError:
        msg = bot.send_message(chat_id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –≤–∞–≥—É —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 60) —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(msg, calculate_size)
        return

    height = user_data[chat_id].get('height')
    weight = user_data[chat_id].get('weight')
    gender = user_gender.get(message.from_user.id, '–ñ—ñ–Ω–∫–∞')  # –¥–µ—Ñ–æ–ª—Ç ‚Äî –ñ—ñ–Ω–∫–∞

    height_m = height / 100
    bmi = weight / (height_m ** 2)

    if gender == "–ñ—ñ–Ω–∫–∞":
        if bmi < 18.5:
            size = 'XS'
        elif bmi < 24.9:
            size = 'S - M'
        elif bmi < 29.9:
            size = 'L'
        else:
            size = 'XL —ñ –±—ñ–ª—å—à–µ'
        photo_path = 'images/size_women.jpg'
    else:
        if bmi < 18.5:
            size = 'S'
        elif bmi < 24.9:
            size = 'M'
        elif bmi < 29.9:
            size = 'L'
        else:
            size = 'XL —ñ –±—ñ–ª—å—à–µ'
        photo_path = 'images/size_men.jpg'

    bot.send_message(chat_id, f"–Ü–ú–¢: {bmi:.1f}\n–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –æ–¥—è–≥—É: *{size}*", parse_mode='Markdown')

    if os.path.exists(photo_path):
        with open(photo_path, 'rb') as photo:
            bot.send_photo(chat_id, photo)
    else:
        bot.send_message(chat_id, "–§–æ—Ç–æ –∑ —Ä–æ–∑–º—ñ—Ä–Ω–æ—é —Å—ñ—Ç–∫–æ—é —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ")

    # –û—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    user_data.pop(chat_id, None)
    user_gender.pop(message.from_user.id, None)

# –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
@bot.message_handler(commands=['faq'])
def faq(message):
    bot.send_message(message.chat.id, """
1. –Ø–∫ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —Å–≤—ñ–π —Ä–æ–∑–º—ñ—Ä –æ–¥—è–≥—É?  
–í–∏–º—ñ—Ä—è–π –≥—Ä—É–¥–∏, —Ç–∞–ª—ñ—é —Ç–∞ —Å—Ç–µ–≥–Ω–∞ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–º —ñ –∑–≤—ñ—Ä —ñ–∑ —Ç–∞–±–ª–∏—Ü–µ—é —Ä–æ–∑–º—ñ—Ä—ñ–≤.

2. –©–æ —Ä–æ–±–∏—Ç–∏, —è–∫—â–æ —è –º—ñ–∂ –¥–≤–æ–º–∞ —Ä–æ–∑–º—ñ—Ä–∞–º–∏?  
–ö—Ä–∞—â–µ –æ–±—Ä–∞—Ç–∏ –±—ñ–ª—å—à–∏–π ‚Äî –π–æ–≥–æ –ª–µ–≥—à–µ –ø—ñ–¥–≥–∞–Ω—è—Ç–∏, –Ω—ñ–∂ –Ω–æ—Å–∏—Ç–∏ —Ç—ñ—Å–Ω–∏–π –æ–¥—è–≥.

3. –ß–∏–º –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è S –≤—ñ–¥ 36 —Ä–æ–∑–º—ñ—Ä—É?  
S ‚Äî –±—É–∫–≤–µ–Ω–µ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è, 36 ‚Äî —Ü–∏—Ñ—Ä–æ–≤–µ. –ü—Ä–∏–±–ª–∏–∑–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å, –∞–ª–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –±—Ä–µ–Ω–¥—É.

4. –Ø–∫ –æ–±—Ä–∞—Ç–∏ –æ–¥—è–≥ –∑–∞ –∑—Ä–æ—Å—Ç–æ–º —ñ –≤–∞–≥–æ—é?  
–ú–æ–∂–Ω–∞ –æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—è –Ω–∞ —Ç–∞–±–ª–∏—Ü—ñ –Ü–ú–¢, –∞–ª–µ —Ç–æ—á–Ω—ñ—à–µ ‚Äî –∑–∞ –æ–±—Ö–≤–∞—Ç–∞–º–∏ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö.

5. –Ø–∫–∏–π –æ–¥—è–≥ –≤—ñ–∑—É–∞–ª—å–Ω–æ —Å—Ç—Ä—É–Ω–∏—Ç—å?  
–û–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π —Ç–µ–º–Ω–∏–π –æ–¥—è–≥, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ –ª—ñ–Ω—ñ—ó, V-–ø–æ–¥—ñ–±–Ω–∏–π –≤–∏—Ä—ñ–∑.

6. –©–æ –ø—ñ–¥—ñ–π–¥–µ –¥—ñ–≤—á–∏–Ω—ñ –∑ —à–∏—Ä–æ–∫–∏–º–∏ —Å—Ç–µ–≥–Ω–∞–º–∏?  
–°–≤—ñ—Ç–ª–∏–π –∞–±–æ –æ–± º—î–º–Ω–∏–π –≤–µ—Ä—Ö, –æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π –Ω–∏–∑ –ø—Ä—è–º–æ–≥–æ –∫—Ä–æ—é.

7. –Ø–∫ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —á–∏ –ø—ñ–¥—ñ–π–¥–µ —Ä—ñ—á –±–µ–∑ –ø—Ä–∏–º—ñ—Ä–∫–∏?  
–ó–≤—ñ—Ä —Å–≤–æ—ó –º—ñ—Ä–∫–∏ –∑ —Ç–∞–±–ª–∏—Ü–µ—é, –ø–µ—Ä–µ–≤—ñ—Ä –∑–∞–º—ñ—Ä–∏ –≤–∏—Ä–æ–±—É —Ç–∞ —Å–∫–ª–∞–¥ —Ç–∫–∞–Ω–∏–Ω–∏.

8. –ß–∏–º –±–∞–≤–æ–≤–Ω–∞ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –ø–æ–ª—ñ–µ—Å—Ç–µ—Ä—É?  
–ë–∞–≤–æ–≤–Ω–∞ ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞, –¥–∏—Ö–∞—î. –ü–æ–ª—ñ–µ—Å—Ç–µ—Ä ‚Äî —Å–∏–Ω—Ç–µ—Ç–∏–∫–∞, –º–µ–Ω—à–µ –º–Ω–µ—Ç—å—Å—è —ñ –¥–µ—à–µ–≤—à–∏–π.

9. –Ø–∫ –¥–æ–≥–ª—è–¥–∞—Ç–∏ –∑–∞ –æ–¥—è–≥–æ–º, —â–æ–± –Ω–µ –∑—ñ–ø—Å—É–≤–∞—Ç–∏?  
–î–æ—Ç—Ä–∏–º—É–π—Å—è –≤–∫–∞–∑—ñ–≤–æ–∫ –Ω–∞ —è—Ä–ª–∏–∫—É: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø—Ä–∞–Ω–Ω—è, —Å—É—à–∫–∞, –ø—Ä–∞—Å—É–≤–∞–Ω–Ω—è.

10. –Ø–∫ –∑—ñ–±—Ä–∞—Ç–∏ –±–∞–∑–æ–≤–∏–π –≥–∞—Ä–¥–µ—Ä–æ–±?  
–û–±–∏—Ä–∞–π –ø—Ä–æ—Å—Ç—ñ —Ñ–∞—Å–æ–Ω–∏, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ —ñ —Ä–µ—á—ñ, —â–æ –ª–µ–≥–∫–æ –ø–æ—î–¥–Ω—É—é—Ç—å—Å—è –º—ñ–∂ —Å–æ–±–æ—é.
""")

# –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ
@bot.message_handler(commands=['contacts'])
def contacts(message):
    bot.send_message(message.chat.id, """
–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:
–ê–¥—Ä–µ—Å–∞: –≤—É–ª. –ú–æ–¥–Ω–∞, 12, –ö–∏—ó–≤  
–¢–µ–ª–µ—Ñ–æ–Ω: +38 (044) 123-45-67  
Email: info@fashion-shop.com  
–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏: –ü–Ω‚Äì–°–± –∑ 10:00 –¥–æ 19:00  
–°–∞–π—Ç: fashion-shop.com  
–¶–µ –¥–µ–º–æ-–±–æ—Ç –¥–ª—è –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ. –î–∞–Ω—ñ ‚Äì —É–º–æ–≤–Ω—ñ.
""")

# –î–æ–ø–æ–º–æ–≥–∞ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@bot.message_handler(commands=['order'])
def order(message):
    bot.send_message(message.chat.id,
"–©–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n"
"1. –û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä (–Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –∞–±–æ –∫–æ–¥)\n"
"2. –í–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä —Ç–∞ –∫–æ–ª—ñ—Ä\n"
"3. –ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –º—ñ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏\n\n"
"–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –º–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.\n\n"
"–¶–µ –¥–µ–º–æ-–±–æ—Ç. –†–µ–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –æ—Ñ–æ—Ä–º–ª—é—î—Ç—å—Å—è.", parse_mode="Markdown")

# –†–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É —ñ –æ–ø–ª–∞—Ç—É
@bot.message_handler(commands=['delivery'])
def delivery(message):
    bot.send_message(message.chat.id,
"üõí –©–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n"
"1. –û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä (–Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –∞–±–æ –∫–æ–¥)\n"
"2. –í–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä —Ç–∞ –∫–æ–ª—ñ—Ä\n"
"3. –ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –º—ñ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏\n\n"
"–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –º–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.\n\n"
"–¶–µ –¥–µ–º–æ-–±–æ—Ç. –†–µ–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –æ—Ñ–æ—Ä–º–ª—é—î—Ç—å—Å—è.", parse_mode="Markdown")

# –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ç–æ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(content_types=['photo'])
def handler_photo(message):
    bot.send_message(message.chat.id, '–Ø–∫—â–æ —Ö–æ—á–µ—à –ø–æ—Ä–∞–¥–∏ - –Ω–∞–ø–∏—à–∏, —â–æ —Å–∞–º–µ —à—É–∫–∞—î—à –∞–±–æ —â–æ —Ç–æ–±—ñ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è')

# –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–µ–æ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(content_types=['video'])
def handle_video(message):
    bot.send_message(message.chat.id, '–Ø–∫—â–æ —Ü–µ –ø—Ä–∏–∫–ª–∞–¥ —Å—Ç–∏–ª—é —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –º–∏ –π–æ–≥–æ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ')

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ –∫–æ–º–∞–Ω–¥–∏
@bot.message_handler(func=lambda message: not message.text.startswith('/'))
def info(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /start —â–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑—ñ –º–Ω–æ—é\n'
                                    '–ü—Ä–∏–π–Ω—è—Ç–∏ –≤—ñ–¥–≥—É–∫ –∞–±–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è /feedback\n')

# –°—Ç–∞–Ω –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_feedback_state = {}

@bot.message_handler(commands=['feedback'])
def handle_feedback(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫ –∞–±–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è\n')
    user_feedback_state[message.from_user.id] = 'awaiting_feedback'

@bot.message_handler(func=lambda message: user_feedback_state.get(message.from_user.id) == 'awaiting_feedback')
def receive_feedback(message):
    feedback_text = message.text.strip()
    user = message.from_user

    if not feedback_text:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–ø–∏—à—ñ—Ç—å —â–æ—Å—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ üôÇ")
        return

    try:
        with open('feedback.txt', 'a', encoding='utf-8') as f:
            f.write(f"–í—ñ–¥ {user.first_name} (@{user.username if user.username else '–Ω–µ–º–∞—î username'}):\n")
            f.write(f"{feedback_text}\n\n")
    except Exception as e:
        print(f"Error writing feedback: {e}")

    bot.send_message(message.chat.id, "–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!")
    user_feedback_state.pop(message.from_user.id, None)

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
create_users_table()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
